<UserControl
    x:Class="QuickPad.Dialog.FindAndReplace"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:QuickPad.Dialog"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tkui="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:q="using:QuickPad"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <tkui:DropShadowPanel>
        <Grid MinWidth="350" Background="{ThemeResource SystemControlAcrylicElementMediumHighBrush}" Padding="10">
            <Grid.Resources>
                <Style TargetType="Button">
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="BorderThickness" Value="1"/>                    
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ToggleButton IsChecked="{x:Bind ShowReplace, Mode=TwoWay}">
                <FontIcon Glyph="&#xE011;" />
                <ToolTipService.ToolTip>
                    <TextBlock Text="More..."/>
                </ToolTipService.ToolTip>
            </ToggleButton>
            <TextBox x:Name="FindInput" x:FieldModifier="public" Text="{x:Bind TextToFind, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="1" Grid.Column="1" Margin="5,0" PlaceholderText="Looking for?"/>
            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <Button Height="32" Click="{x:Bind SendRequestFind}">
                    <Grid>
                        <FontIcon Glyph="&#xE094;" />
                        <FontIcon Glyph="&#xE0A6;" FontSize="8" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{x:Bind q:Converter.BoolToVisibilityInvert(FindForward), Mode=OneWay}"/>
                        <FontIcon Glyph="&#xE0AB;" FontSize="8" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{x:Bind q:Converter.BoolToVisibility(FindForward), Mode=OneWay}"/>
                    </Grid>
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Find"/>
                    </ToolTipService.ToolTip>
                </Button>
                <Button Padding="2" Height="32">
                    <FontIcon Glyph="&#xE813;"/>
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Find option"/>
                    </ToolTipService.ToolTip>
                    <Button.Flyout>
                        <MenuFlyout Placement="BottomEdgeAlignedRight">
                            <MenuFlyoutItem Text="Find Next" Click="{x:Bind RequestFindNext}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE0AB;" />
                                </MenuFlyoutItem.Icon>
                                <MenuFlyoutItem.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="F3" />
                                </MenuFlyoutItem.KeyboardAccelerators>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem Text="Find Previous" Click="{x:Bind RequestFindPrevious}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE0A6;" />
                                </MenuFlyoutItem.Icon>
                                <MenuFlyoutItem.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="F3" Modifiers="Shift" />
                                </MenuFlyoutItem.KeyboardAccelerators>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
                
                <!--Close dialog-->
                <Button Margin="5,0,0,0" Click="{x:Bind RequestCloseDialog}">
                    <FontIcon Glyph="&#xE10A;" />
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Close"/>
                    </ToolTipService.ToolTip>
                </Button>
            </StackPanel>
            
            <!--Second row-->
            <TextBox Text="{x:Bind TextToReplace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="1" Grid.Column="1" Grid.Row="1" Margin="5" PlaceholderText="Replace with.." Visibility="{x:Bind q:Converter.BoolToVisibility(ShowReplace), Mode=OneWay}"/>
            <StackPanel Grid.Column="2" Grid.Row="1" Orientation="Horizontal" Visibility="{x:Bind q:Converter.BoolToVisibility(ShowReplace), Mode=OneWay}">
                <Button Click="{x:Bind SendRequestReplace}">
                    <FontIcon Glyph="&#xE8AC;"/>
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Replace"/>
                    </ToolTipService.ToolTip>
                </Button>

                <Button Margin="5,0" Click="{x:Bind SendRequestReplaceAll}">
                    <FontIcon Glyph="&#xE8B3;"/>
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Replace all"/>
                    </ToolTipService.ToolTip>
                </Button>
            </StackPanel>
            
            <!--Options-->
            <StackPanel Grid.Row="2" Grid.ColumnSpan="3" Visibility="{x:Bind q:Converter.BoolToVisibility(ShowReplace), Mode=OneWay}">
                <CheckBox Content="Match case" IsChecked="{x:Bind MatchCase, Mode=TwoWay}"/>
                <CheckBox Content="Wrap around" IsChecked="{x:Bind WrapAround, Mode=TwoWay}"/>
            </StackPanel>
        </Grid>
    </tkui:DropShadowPanel>
</UserControl>
